kprobe:kfree_skbmem {
    $skb = (struct sk_buff*)arg0;
    $net = (struct net*)$skb->dev->nd_net.net;
    $errors = (uint64*)$net->mib.xfrm_statistics->mibs;
    printf("%s %llx\n", ksym(*(uint64*)(reg("bp")+8)), $net);
    printf("%s %lld\n", ksym(*(uint64*)(reg("bp")+8)), $net->ns.inum);

    $found_err = true;
    if ($errors[0] != $1) {
        printf("XfrmInError changed from %d to %d\n", $1, $errors[0])
    } else if ($errors[1] != $2) {
        printf("XfrmInBufferError changed from %d to %d\n", $2, $errors[1])
    } else if ($errors[2] != $3) {
        printf("XfrmInHdrError changed from %d to %d\n", $3, $errors[2])
    } else if ($errors[3] != $4) {
        printf("XfrmInNoStates changed from %d to %d\n", $4, $errors[3])
    } else if ($errors[4] != $5) {
        printf("XfrmInStateProtoError changed from %d to %d\n", $5, $errors[4])
    } else if ($errors[5] != $6) {
        printf("XfrmInStateModeError changed from %d to %d\n", $6, $errors[5])
    } else if ($errors[6] != $7) {
        printf("XfrmInStateSeqError changed from %d to %d\n", $7, $errors[6])
    } else if ($errors[7] != $8) {
        printf("XfrmInStateExpired changed from %d to %d\n", $8, $errors[7])
    } else if ($errors[8] != $9) {
        printf("XfrmInStateMismatch changed from %d to %d\n", $9, $errors[8])
    } else if ($errors[9] != $10) {
        printf("XfrmInStateInvalid changed from %d to %d\n", $10, $errors[9])
    } else if ($errors[10] != $11) {
        printf("XfrmInTmplMismatch changed from %d to %d\n", $11, $errors[10])
    } else if ($errors[11] != $12) {
        printf("XfrmInNoPols changed from %d to %d\n", $12, $errors[11])
    } else if ($errors[12] != $13) {
        printf("XfrmInPolBlock changed from %d to %d\n", $13, $errors[12])
    } else if ($errors[13] != $14) {
        printf("XfrmInPolError changed from %d to %d\n", $14, $errors[13])
    } else if ($errors[14] != $15) {
        printf("XfrmOutError changed from %d to %d\n", $15, $errors[14])
    } else if ($errors[15] != $16) {
        printf("XfrmOutBundleGenError changed from %d to %d\n", $16, $errors[15])
    } else if ($errors[16] != $17) {
        printf("XfrmOutBundleCheckError changed from %d to %d\n", $17, $errors[16])
    } else if ($errors[17] != $18) {
        printf("XfrmOutNoStates changed from %d to %d\n", $18, $errors[17])
    } else if ($errors[18] != $19) {
        printf("XfrmOutStateProtoError changed from %d to %d\n", $19, $errors[18])
    } else if ($errors[19] != $20) {
        printf("XfrmOutStateModeError changed from %d to %d\n", $20, $errors[19])
    } else if ($errors[20] != $21) {
        printf("XfrmOutStateSeqError changed from %d to %d\n", $21, $errors[20])
    } else if ($errors[21] != $22) {
        printf("XfrmOutStateExpired changed from %d to %d\n", $22, $errors[21])
    } else if ($errors[22] != $23) {
        printf("XfrmOutPolBlock changed from %d to %d\n", $23, $errors[22])
    } else if ($errors[23] != $24) {
        printf("XfrmOutPolDead changed from %d to %d\n", $24, $errors[23])
    } else if ($errors[24] != $25) {
        printf("XfrmOutPolError changed from %d to %d\n", $25, $errors[24])
    } else if ($errors[25] != $26) {
        printf("XfrmFwdHdrError changed from %d to %d\n", $26, $errors[25])
    } else if ($errors[26] != $27) {
        printf("XfrmOutStateInvalid changed from %d to %d\n", $27, $errors[26])
    } else if ($errors[27] != $28) {
        printf("XfrmAcquireError changed from %d to %d\n", $28, $errors[27])
    } else {
        $found_err = false;
    }

    if ($found_err) {
        printf("bt: %s\n", kstack());
        exit();
    }
}

kfunc:vmlinux:xfrm_statistics_seq_show {
    $net = (struct net*)args->seq->private;
    $errors = (uint64*)$net->mib.xfrm_statistics->mibs;
    printf("xfrm show %d\n", $errors[3])
}
