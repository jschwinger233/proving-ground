GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1
Copyright (C) 2022 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
"/proc/kcore": not in executable format: file format not recognized
[New process 1]
Core was generated by `BOOT_IMAGE=/boot/vmlinuz-6.2.0-32-generic root=UUID=d1cf701b-0cad-4081-b28d-9eb'.
#0  0x0000000000000000 in ?? ()
   0xffffffffb9711400:	nopl   0x0(%rax,%rax,1)
   0xffffffffb9711405:	push   %rbp
   0xffffffffb9711406:	mov    %rsp,%rbp
   0xffffffffb9711409:	push   %r15
   0xffffffffb971140b:	push   %r14
   0xffffffffb971140d:	push   %r13
   0xffffffffb971140f:	push   %r12
   0xffffffffb9711411:	mov    %rdx,%r12
   0xffffffffb9711414:	push   %rbx
   0xffffffffb9711415:	mov    %ecx,%ebx
   0xffffffffb9711417:	sub    $0xd8,%rsp
   0xffffffffb971141e:	mov    %rdi,-0xe8(%rbp)
   0xffffffffb9711425:	mov    %esi,-0xe0(%rbp)
   0xffffffffb971142b:	mov    %gs:0x28,%rax
   0xffffffffb9711434:	mov    %rax,-0x30(%rbp)
   0xffffffffb9711438:	mov    0x10(%rdx),%rax
   0xffffffffb971143c:	mov    0x538(%rax),%rax
   0xffffffffb9711443:	mov    %rax,-0xd8(%rbp)
   0xffffffffb971144a:	call   0xffffffffb89ada60
   0xffffffffb971144f:	mov    0x16fb142(%rip),%rax        # 0xffffffffbae0c598
   0xffffffffb9711456:	movl   $0x0,-0xf0(%rbp)
   0xffffffffb9711460:	test   %rax,%rax
   0xffffffffb9711463:	je     0xffffffffb9711482
   0xffffffffb9711465:	mov    (%rax),%rax
   0xffffffffb9711468:	movzwl %bx,%esi
   0xffffffffb971146b:	lea    -0xd0(%rbp),%rdx
   0xffffffffb9711472:	mov    %r12,%rdi
   0xffffffffb9711475:	call   *%rax
   0xffffffffb9711477:	nopl   (%rax)
   0xffffffffb971147a:	test   %al,%al
   0xffffffffb971147c:	jne    0xffffffffb9711591
   0xffffffffb9711482:	call   0xffffffffb89b4ae0
   0xffffffffb9711487:	mov    -0xe0(%rbp),%eax
   0xffffffffb971148d:	and    $0xfffffffc,%eax
   0xffffffffb9711490:	cmp    $0x2,%bx
   0xffffffffb9711494:	je     0xffffffffb971182a
   0xffffffffb971149a:	cmp    $0xa,%bx
   0xffffffffb971149e:	jne    0xffffffffb97117de
   0xffffffffb97114a4:	xor    %edx,%edx
   0xffffffffb97114a6:	lea    -0x90(%rbp),%r13
   0xffffffffb97114ad:	test   %eax,%eax
   0xffffffffb97114af:	mov    %r12,%rdi
   0xffffffffb97114b2:	setne  %dl
   0xffffffffb97114b5:	mov    %r13,%rsi
   0xffffffffb97114b8:	call   0xffffffffb970c7b0
   0xffffffffb97114bd:	lea    -0x7c(%rbp),%rsi
   0xffffffffb97114c1:	mov    %r12,%rdi
   0xffffffffb97114c4:	call   0xffffffffb8e674e0
   0xffffffffb97114c9:	test   %eax,%eax
   0xffffffffb97114cb:	js     0xffffffffb97117de
   0xffffffffb97114d1:	call   0xffffffffb89ada60
   0xffffffffb97114d6:	mov    0x16f9a9b(%rip),%rax        # 0xffffffffbae0af78
   0xffffffffb97114dd:	test   %rax,%rax
   0xffffffffb97114e0:	je     0xffffffffb97114f6
   0xffffffffb97114e2:	mov    0x8(%rax),%rax
   0xffffffffb97114e6:	test   %rax,%rax
   0xffffffffb97114e9:	je     0xffffffffb97114f6
   0xffffffffb97114eb:	mov    %r13,%rsi
   0xffffffffb97114ee:	mov    %r12,%rdi
   0xffffffffb97114f1:	call   *%rax
   0xffffffffb97114f3:	nopl   (%rax)
   0xffffffffb97114f6:	call   0xffffffffb89b4ae0
   0xffffffffb97114fb:	movzwl %bx,%ebx
   0xffffffffb97114fe:	testb  $0x2,0x7f(%r12)
   0xffffffffb9711504:	je     0xffffffffb97115b0
   0xffffffffb971150a:	mov    0xe0(%r12),%r14
   0xffffffffb9711512:	movzbl 0x5(%r14),%eax
   0xffffffffb9711517:	shl    $0x3,%eax
   0xffffffffb971151a:	cltq   
   0xffffffffb971151c:	add    %r14,%rax
   0xffffffffb971151f:	mov    %rax,-0xf8(%rbp)
   0xffffffffb9711526:	je     0xffffffffb97115bb
   0xffffffffb971152c:	mov    (%rax),%ecx
   0xffffffffb971152e:	mov    %ecx,%r14d
   0xffffffffb9711531:	mov    %ecx,-0xfc(%rbp)
   0xffffffffb9711537:	sub    $0x1,%r14d
   0xffffffffb971153b:	js     0xffffffffb97115bb
   0xffffffffb971153d:	movslq %r14d,%rsi
   0xffffffffb9711540:	lea    0x8(%rax,%rsi,8),%r15
   0xffffffffb9711545:	jmp    0xffffffffb9711558
   0xffffffffb9711547:	sub    $0x1,%r14d
   0xffffffffb971154b:	sub    $0x8,%r15
   0xffffffffb971154f:	cmp    $0xffffffff,%r14d
   0xffffffffb9711553:	je     0xffffffffb97115bb
   0xffffffffb9711555:	movslq %r14d,%rsi
   0xffffffffb9711558:	cmp    $0x5,%rsi
   0xffffffffb971155c:	ja     0xffffffffb9711ab0
   0xffffffffb9711562:	mov    (%r15),%rax
   0xffffffffb9711565:	mov    %ebx,%edx
   0xffffffffb9711567:	mov    %r13,%rsi
   0xffffffffb971156a:	lea    0x68(%rax),%rdi
   0xffffffffb971156e:	call   0xffffffffb970f3a0
   0xffffffffb9711573:	test   %al,%al
   0xffffffffb9711575:	jne    0xffffffffb9711547
   0xffffffffb9711577:	mov    -0xd8(%rbp),%rax
   0xffffffffb971157e:	mov    0x1a8(%rax),%rax
   0xffffffffb9711585:	incq   %gs:0x48(%rax)
   0xffffffffb971158a:	xor    %eax,%eax
   0xffffffffb971158c:	jmp    0xffffffffb97117f3
   0xffffffffb9711591:	mov    -0xc8(%rbp),%eax
